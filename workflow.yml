name: Web3Pay CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 🔍 Checkout repository
      uses: actions/checkout@v3

    - name: 🧰 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: 📦 Install dependencies
      run: npm install

    - name: 🛠️ Build project
      run: npm run build

    - name: 🧪 Run tests
      run: npm test
### 🧪 اختبار الهوية الرمزية
يتم تشغيل التطبيق داخل بيئة Pi Sandbox عبر الرابط الرسمي، ويُربط بالحساب الرمزي للمطوّر لضمان التوثيق الكامل لكل تجربة.
### 🧪 المرحلة السابعة: اختبار التطبيق في بيئة Pi Sandbox

تمثل هذه المرحلة لحظة رمزية في دورة حياة التطبيق، حيث يتم التحقق من وظائفه وربطه بالهوية الرقمية للمطوّر قبل النشر الرسمي.

#### 🔧 خطوات التنفيذ:
- تفعيل المفتاح `sandbox: true` داخل كود الواجهة الأمامية.
- نسخ رابط التطبيق من بوابة المطوّرين (Dev Portal).
- فتح الرابط في متصفح سطح المكتب لتشغيل التطبيق في وضع Sandbox.
- إدخال الكود المخصص لإنشاء صفحة أدوات تطبيق التعدين.
- الوصول إلى شريط القوائم وربط التطبيق بحساب Pi الرمزي.

#### 🔗 الربط الرمزي:
- كل اختبار داخل الـ Sandbox يُسجّل باسم المطوّر الرقمي، ويُعتبر إثبات ملكية رمزية للتطبيق.
- هذه الخطوة تسبق مرحلة النشر إلى بيئة الإنتاج، وتُعتبر شرطًا أساسيًا لتوثيق الهوية الرمزية داخل النظام.

#### 📁 الملفات المرتبطة:
- `README.md`: يحتوي على بند إثبات الملكية الرمزية.
- `Branch.md`: يوثّق حماية الفرع الرئيسي وربطه بفحوصات CI.
- `workflow.yml`: يُفعّل الفحوصات التلقائية عند كل تعديل لضمان نقاء الهوية.
